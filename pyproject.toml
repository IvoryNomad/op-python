[project]
name = "op-python"
version = "0.1.0"
description = "Python wrapper for 1Password CLI (op) for managing secrets"
authors = [
    {name = "Nathan Eric Norman", email = "nenorman@norme.sh"}
]
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
keywords = ["1password", "secrets", "cli", "password-manager"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
docs = ["pip-licenses>=5.0.0", "sphinx>=7.1.0", "sphinx-rtd-theme>=1.3.0"]

[project.urls]
Homepage = "https://github.com/IvoryNomad/op-python"
Repository = "https://github.com/IvoryNomad/op-python"
Issues = "https://github.com/IvoryNomad/op-python/issues"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"

# Code quality
black = ">=24.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"

# Security
bandit = "^1.7.5"
safety = "^2.3.0"

[tool.poetry]
packages = [{include = "op_python", from = "src"}]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["op_python"]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Bandit configuration (security linting)
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B404", "B603"]
# Skip assert_used test
# Skip B404:blacklist - subprocess required for 1Password CLI integration
# Skip B603 - using list form with known executable path, input sanitized
# Skip B603 - args are constructed internally, not from user input

# Flake8 configuration (create setup.cfg file for this)
# [flake8]
# max-line-length = 88
# extend-ignore = E203, W503
# exclude =
#     .git,
#     __pycache__,
#     .venv,
#     venv,
#     build,
#     dist,
#     *.egg-info

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
